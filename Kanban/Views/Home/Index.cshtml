@model Data.Object.Kanban
@{
    ViewBag.Title = "TaskBoard";

    @*<script type="text/javascript" src="~/Scripts/interact/interact.js"></script>*@
    <script>
        interact('.dropzone').dropzone({
            // only accept elements matching this CSS selector
            accept: '.draggable',
            // Require a 75% element overlap for a drop to be possible
            overlap: 0.75,

            // listen for drop related events:

            ondropactivate: function (event) {
                // add active dropzone feedback
                event.target.classList.add('drop-active');
            },
            ondragenter: function (event) {
                var draggableElement = event.relatedTarget,
                    dropzoneElement = event.target;

                // feedback the possibility of a drop
                dropzoneElement.classList.add('drop-target');
                draggableElement.classList.add('can-drop');
            },
            ondragleave: function (event) {
                // remove the drop feedback style
                event.target.classList.remove('drop-target');
                //event.relatedTarget.classList.remove('can-drop');
                //event.relatedTarget.textContent = 'Dragged out';
            },
            ondrop: function (event) {
                //event.relatedTarget.textContent = 'Dropped';
                var tarefaId = $(event.interaction.element).find('#tarefaId').val();
                var faseId = $(event.interaction.dropElement).attr('data-fase');

                $.post('@Url.Action("DropTarefa", "Tarefa")',
                    { tarefaId: tarefaId, faseId: faseId }
                );

            },
            ondropdeactivate: function (event) {
                //remove active dropzone feedback
                event.target.classList.remove('drop-active');
                event.target.classList.remove('drop-target');
            }
        });

        /*
         * Segunda parte do plugin
         */

        interact('.draggable')
            .draggable({
                // enable inertial throwing
                inertia: true,
                // keep the element within the area of it's parent
                restrict: {
                    restriction: ".painel",
                    endOnly: true,
                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }
                },

                // call this function on every dragmove event
                onmove: dragMoveListener,
                // call this function on every dragend event
                //onend: function (event) {
                //    var textEl = event.target.querySelector('p');

                //    textEl && (textEl.textContent =
                //      'moved a distance of '
                //      + (Math.sqrt(event.dx * event.dx +
                //                   event.dy * event.dy) | 0) + 'px');
                //}
            });

        function dragMoveListener(event) {
            var target = event.target,
                // keep the dragged position in the data-x/data-y attributes
                x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
                y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

            // translate the element
            target.style.webkitTransform =
            target.style.transform =
              'translate(' + x + 'px, ' + y + 'px)';

            // update the posiion attributes
            target.setAttribute('data-x', x);
            target.setAttribute('data-y', y);
        }

        // this is used later in the resizing demo
        window.dragMoveListener = dragMoveListener;

    </script>

    <style>
        .post-it {
            float: left;
            background-color: transparent;
            border: 0px;
            padding: 0px;
            height: 210px !important;
            width: 210px !important;
            margin: 0px 0px 0px 0px;
            color: white;
            background-image: url(../../Images/post-it.png);
            background-repeat: no-repeat;
            background-size: 210px;
        }

            .post-it .open-modal {
                position: relative;
                margin-left: 170px;
                margin-top: 8px;
                width: 15px;
                height: 15px;
                background-color: transparent;
                cursor: pointer;
            }

                .post-it .open-modal:hover {
                    opacity: .3;
                }

                .post-it .open-modal .lr {
                    z-index: 1051;
                    width: 2px;
                    height: 15px;
                    background-color: #fff;
                    -webkit-transform: rotate(90deg);
                    -ms-transform: rotate(90deg);
                    transform: rotate(90deg);
                }

                    .post-it .open-modal .lr .rl {
                        z-index: 1052;
                        width: 2px;
                        height: 15px;
                        background-color: #fff;
                        -webkit-transform: rotate(90deg);
                        -ms-transform: rotate(90deg);
                        transform: rotate(90deg);
                    }

            .post-it .text {
                height: 60%;
                margin-top: 0px;
                padding-top: 0px;
            }

            .post-it .botons {
                text-align: center;
                width: 195px;
                margin: 0px;
            }

            .post-it .textPost-it {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                border: 0px;
                width: 190px !important;
                margin: 0px 0px 0px 5px;
            }

        hr {
            margin: 10px 0px 0px 5px;
            width: 90%;
        }

        .post-it .timer {
            display: inline-block;
            background-color: #0088cf;
            border: 2px solid #fff;
            border-radius: 5px;
            padding: 1px;
            padding-left: 5px;
            height: 25px !important;
            width: 80px;
            margin: 0px 3px 0px 0px;
        }

        input[type='time'] {
            font-family: Verdana;
            font-weight: 600;
            font-size: small;
            color: #fff;
        }

        .post-it .play {
            display: inline-block;
            background-color: transparent;
            border: 0px;
            padding: 7px;
            height: 25px !important;
            width: 25px !important;
            margin: 5px 0px 0px 0px;
            background-image: url(../../Images/play.png);
            background-size: 25px;
            background-repeat: no-repeat;
        }

        .post-it .pause {
            display: inline-block;
            background-color: transparent;
            border: 0px;
            padding: 7px;
            height: 25px !important;
            width: 25px !important;
            margin: 0px;
            background-image: url(../../Images/pause.png);
            background-size: 25px;
            background-repeat: no-repeat;
        }

        .post-it .stop {
            display: inline-block;
            background-color: transparent;
            border: 0px;
            padding: 7px;
            height: 25px !important;
            width: 25px !important;
            margin: 0px;
            background-image: url(../../Images/stop.png);
            background-size: 25px;
            background-repeat: no-repeat;
        }

        .dropzone {
            margin-left: 5px;
            margin-right: 5px;
            height: auto;
            width: 32%;
            float: left;
            background-color: #F8F8F8;
            min-height: 580px;
        }

        .drag-drop {
            display: inline-block;
            min-width: 40px;
            padding: 2em 0.5em;
            color: #fff;
            background-color: transparent;
            border: 0px;
            -webkit-transform: translate(0px, 0px);
            transform: translate(0px, 0px);
            transition: background-color 0.3s;
        }

        .drop-active {
            border-color: #aaa;
        }

        .drop-target {
            background-color: #4800ff;
            border-color: #fff;
            border-style: solid;
        }

        .portfolio-modal .modal-content {
            padding: 100px 0;
            min-height: 100%;
            border: 0;
            border-radius: 0;
            text-align: center;
            background-clip: border-box;
            -webkit-box-shadow: none;
            box-shadow: none;
        }

            .portfolio-modal .modal-content h2 {
                margin-bottom: 15px;
                font-size: 3em;
            }

            .portfolio-modal .modal-content p {
                margin-bottom: 30px;
            }

                .portfolio-modal .modal-content p.item-intro {
                    margin: 20px 0 30px;
                    font-family: "Droid Serif","Helvetica Neue",Helvetica,Arial,sans-serif;
                    font-size: 16px;
                    font-style: italic;
                }

            .portfolio-modal .modal-content ul.list-inline {
                margin-top: 0;
                margin-bottom: 30px;
            }

            .portfolio-modal .modal-content img {
                margin-bottom: 30px;
            }

        .portfolio-modal .close-modal {
            position: absolute;
            top: 25px;
            right: 25px;
            width: 50px;
            height: 50px;
            background-color: transparent;
            cursor: pointer;
        }

            .portfolio-modal .close-modal:hover {
                opacity: .3;
            }

            .portfolio-modal .close-modal .lr {
                z-index: 1051;
                width: 1px;
                height: 50px;
                margin-left: 35px;
                background-color: #222;
                -webkit-transform: rotate(45deg);
                -ms-transform: rotate(45deg);
                transform: rotate(45deg);
            }

                .portfolio-modal .close-modal .lr .rl {
                    z-index: 1052;
                    width: 1px;
                    height: 50px;
                    background-color: #222;
                    -webkit-transform: rotate(90deg);
                    -ms-transform: rotate(90deg);
                    transform: rotate(90deg);
                }

        .portfolio-modal .modal-backdrop {
            display: none;
            opacity: 0;
        }
    </style>

    <script src="~/Scripts/Master/Master.js" type="text/javascript"></script>
}
@{
    <div class="container-fluid painel">
        <div id="innerPainel">
            
            @if (Model.Fases == null || Model.Fases.Count() == 0)
            {
                <div class="alert alert-info">Nenhuma Fase Cadastrada para o Projeto e Sprint selecionados.</div>
            }   
            @foreach (var fase in Model.Fases)
            {
                <div id="inner-dropzone" data-fase="@fase.idFase" class="dropzone">
                    <div class="well" style="text-align:center">
                        @fase.descricao.ToUpper()
                    </div>    
                    @foreach (var tarefa in Model.Tarefas.Where(x => x.idFase == fase.idFase))
                    {
                        <div class="draggable drag-drop post-it">
                            <a href="#tarefas" class="tarefaEditar" data-toggle="modal">
                                @Html.Hidden("tarefaId", tarefa.id)
                                <div class="open-modal">
                                    <div class="lr">
                                        <div class="rl">
                                        </div>
                                    </div>
                                </div>
                            </a>
                            <div class="text">
                                <h3 class="textPost-it">@tarefa.titulo</h3>
                                <hr />
                                <p class="textPost-it">@tarefa.descricao</p>
                            </div>
                            <div class="botons">
                                <input type="time" class="timer">
                                <input type="button" class="play">
                                <input type="button" class="pause">
                                <input type="button" class="stop">
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
}
